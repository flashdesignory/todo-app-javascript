{"version":3,"sources":["src/todo/use-doubleclick.js","src/todo/todo-item.js","src/todo/types.js","src/todo/use-api.js","src/todo/use-router.js","src/todo/todo-app.js","src/index.js"],"names":["useDoubleClick","fn","delay","last","now","Date","getTime","difference","args","apply","TodoItem","todo","onToggle","onUpdate","onDelete","item","document","createElement","classList","add","role","id","content","append","toggleContainer","toggleInput","type","checked","completed","tabIndex","toggleLabel","textContent","htmlFor","taskContainer","taskInput","value","task","readOnly","taskLabel","deleteButton","handleDoubleClick","end","length","setSelectionRange","focus","addEventListener","remove","e","key","preventDefault","blur","Todo","Partial","uuid","crypto","randomUUID","create","update","undefined","useApi","todos","initialTodos","addItem","updateItem","map","removeItem","filter","toggleItem","reset","getTodos","useRouter","callback","onChange","current","handleChange","location","hash","initRouter","window","getRoute","split","slice","TodoApp","ref","data","list","querySelector","form","toggle","filters","status","clear","filterButtons","querySelectorAll","handleToggle","updateView","handleUpdate","handleDelete","getElementById","createItem","route","parentElement","activeTodos","forEach","element","shouldShow","style","display","target","elements","prepend","click","replaceChildren","name","button","href"],"mappings":"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","file":"src.41c381b4.js","sourceRoot":"..","sourcesContent":["/**\n * A simple function to normalize a double-click and a double-tab action.\n * There is currently no comparable tab action to dblclick.\n *\n * @param {Function} fn\n * @param {number} delay\n * @returns\n */\nexport const useDoubleClick = (fn, delay) => {\n  let last = 0;\n  return function (...args) {\n    const now = new Date().getTime();\n    const difference = now - last;\n    if (difference < delay && difference > 0) {\n      fn.apply(this, args);\n    }\n\n    last = now;\n  };\n};\n","import { useDoubleClick } from \"./use-doubleclick.js\";\n\nexport const TodoItem = ({ todo, onToggle, onUpdate, onDelete }) => {\n  const item = document.createElement(\"li\");\n  item.classList.add(\"todo-list-li\");\n  item.role = \"listitem\";\n  item.id = `${todo.id}`;\n\n  const content = document.createElement(\"div\");\n  content.classList.add(\"todo-item\");\n  item.append(content);\n\n  // toggle setup\n  const toggleContainer = document.createElement(\"div\");\n  toggleContainer.classList.add(\"todo-item-toggle\");\n\n  const toggleInput = document.createElement(\"input\");\n  toggleInput.id = `toggle-${todo.id}`;\n  toggleInput.type = \"checkbox\";\n  toggleInput.checked = todo.completed;\n  toggleInput.tabIndex = 0;\n  toggleContainer.append(toggleInput);\n\n  const toggleLabel = document.createElement(\"label\");\n  toggleLabel.classList.add(\"visually-hidden\");\n  toggleLabel.textContent = \"Toggle for todo item\";\n  toggleLabel.htmlFor = `toggle-${todo.id}`;\n  toggleContainer.append(toggleLabel);\n\n  // task setup\n  const taskContainer = document.createElement(\"div\");\n  taskContainer.classList.add(\"todo-item-task\");\n\n  const taskInput = document.createElement(\"input\");\n  taskInput.id = `task-${todo.id}`;\n  taskInput.type = \"text\";\n  taskInput.value = todo.task;\n  taskInput.tabIndex = 0;\n  taskInput.readOnly = true;\n  taskContainer.append(taskInput);\n\n  const taskLabel = document.createElement(\"label\");\n  taskLabel.classList.add(\"visually-hidden\");\n  taskLabel.textContent = \"Todo item\";\n  taskLabel.htmlFor = `task-${todo.id}`;\n  taskContainer.append(taskLabel);\n\n  // delete setup\n  const deleteButton = document.createElement(\"button\");\n  deleteButton.classList.add(\"todo-item-button\");\n  deleteButton.textContent = \"X\";\n  deleteButton.tabIndex = 0;\n\n  content.append(toggleContainer, taskContainer, deleteButton);\n\n  // handlers\n  const handleChange = () => {\n    if (onToggle) onToggle(todo.id);\n  };\n\n  const handleDoubleClick = () => {\n    taskInput.readOnly = false;\n    content.classList.add(\"editable-item\");\n\n    const end = taskInput.value.length;\n    taskInput.setSelectionRange(end, end);\n\n    taskInput.focus();\n  };\n\n  const handleBlur = () => {\n    taskInput.readOnly = true;\n    content.classList.remove(\"editable-item\");\n    if (onUpdate) onUpdate(todo.id, taskInput.textContent);\n  };\n\n  const handleKeyUp = (e) => {\n    switch (e.key) {\n      case \"Enter\":\n        e.preventDefault();\n        taskInput.blur();\n        break;\n      case \" \":\n        if (taskInput.readOnly) {\n          e.preventDefault();\n          handleDoubleClick();\n        }\n        break;\n    }\n  };\n\n  const handleClick = () => {\n    if (onDelete) onDelete(todo.id);\n  };\n\n  // listeners\n  toggleInput.addEventListener(\"change\", handleChange);\n  taskInput.addEventListener(\"click\", useDoubleClick(handleDoubleClick, 500));\n  taskInput.addEventListener(\"blur\", handleBlur);\n  taskInput.addEventListener(\"keyup\", handleKeyUp);\n  deleteButton.addEventListener(\"click\", handleClick);\n\n  return item;\n};\n","/**\n * @typedef {!{id: number, completed: boolean, task: string}}\n */\nexport var Todo;\n\n/**\n * @typedef {!{completed: boolean, task: string}}\n */\nexport var Partial;\n","// eslint-disable-next-line no-unused-vars\nimport { Todo, Partial } from \"./types.js\";\n\n/**\n * Function that returns a unique string.\n *\n * @returns {string} A unique id.\n */\nconst uuid = () => crypto.randomUUID();\n\n/**\n * Function that creates a todo, based on the task input.\n *\n * @param {string} task\n * @returns {Todo} A Todo item.\n */\nconst create = (task) => ({\n  id: uuid(),\n  task,\n  completed: false,\n});\n\n/**\n * Function that updates a todo with a Partial.\n *\n * @param {Todo} item\n * @param {Partial} partial\n * @returns {Todo} A Todo item.\n */\nconst update = (item, { task, completed }) => ({\n  ...item,\n  task: task === undefined ? item.task : task,\n  completed: completed === undefined ? item.completed : completed,\n});\n\n/**\n * Model of the api.\n *\n * @param {Array.<Todo>} initialTodos\n * @returns Methods to interact with the model.\n */\nexport const useApi = (initialTodos = []) => {\n  let todos = [...initialTodos];\n\n  /**\n   * Create a new todo and add to state.\n   *\n   * @param {string} task\n   * @returns {Todo} A Todo item.\n   */\n  const addItem = (task) => {\n    const todo = create(task);\n    todos = [todo, ...todos];\n    return todo;\n  };\n\n  /**\n   * Update a todo with given input.\n   *\n   * @param {string} id\n   * @param {string} task\n   * @returns {Todo} A Todo item.\n   */\n  const updateItem = (id, task) => {\n    let todo;\n    todos = todos.map((item) => {\n      if (item.id === id) {\n        todo = update(item, { task });\n        return todo;\n      }\n      return item;\n    });\n\n    return todo;\n  };\n\n  /**\n   * Remove a Todo from local state.\n   *\n   * @param {string} id\n   */\n  const removeItem = (id) => {\n    todos = todos.filter((item) => item.id !== id);\n  };\n\n  /**\n   * Togles a Todo's complete flag.\n   *\n   * @param {string} id\n   * @returns {Todo} A Todo item.\n   */\n  const toggleItem = (id) => {\n    let todo;\n    todos = todos.map((item) => {\n      if (item.id === id) {\n        todo = update(item, { completed: !item.completed });\n        return todo;\n      }\n      return item;\n    });\n\n    return todo;\n  };\n\n  /**\n   * Clears local state.\n   */\n  const reset = () => {\n    todos = [];\n  };\n\n  /**\n   *\n   * @returns {Array.<Todo>} A copy of the state.\n   */\n  const getTodos = () => {\n    return [...todos];\n  };\n\n  return { addItem, updateItem, removeItem, toggleItem, reset, getTodos };\n};\n","/**\n * Listens for hash change of the url and calls onChange if available.\n *\n * @param {Function} callback\n * @returns Methods to interact with useRouter.\n */\nexport const useRouter = (callback) => {\n  let onChange = callback;\n  let current = \"\";\n\n  /**\n   * Change event handler.\n   */\n  const handleChange = () => {\n    current = document.location.hash;\n    if (onChange) onChange(document.location.hash);\n  };\n\n  /**\n   * Initializes router and adds listeners.\n   *\n   * @param {Function} callback\n   */\n  const initRouter = (callback) => {\n    onChange = callback;\n    window.addEventListener(\"hashchange\", handleChange);\n    window.addEventListener(\"load\", handleChange);\n  };\n\n  const getRoute = () => current.split(\"/\").slice(-1)[0];\n\n  return { initRouter, getRoute };\n};\n","import { TodoItem } from \"./todo-item.js\";\nimport { useApi } from \"./use-api.js\";\nimport { useRouter } from \"./use-router.js\";\n\nexport const TodoApp = ({ ref, data = [] }) => {\n  const { getTodos, addItem, updateItem, removeItem, toggleItem, reset } = useApi(data);\n  const { initRouter, getRoute } = useRouter();\n\n  const list = ref.querySelector(\".todo-list-ul\");\n  const form = ref.querySelector(\".todo-form\");\n  const toggle = ref.querySelector(\"#todo-toggle-element\");\n  const filters = ref.querySelector(\".todo-filters\");\n  const status = ref.querySelector(\".todo-status\");\n  const clear = ref.querySelector(\".todo-clear-button\");\n  const filterButtons = [...ref.querySelectorAll(\".todo-navigation > li > a\")];\n\n  // handlers\n  const handleToggle = (id) => {\n    toggleItem(id);\n    updateView();\n  };\n\n  const handleUpdate = (id, task) => {\n    updateItem(id, task);\n    list.focus();\n    updateView();\n  };\n\n  const handleDelete = (id) => {\n    removeItem(id);\n    document.getElementById(id).remove();\n    updateView();\n  };\n\n  const handleAdd = (task) => {\n    const todo = addItem(task);\n    list.prepend(createItem(todo));\n    updateView();\n  };\n\n  // helpers\n  const createItem = (todo) =>\n    TodoItem({\n      todo,\n      onToggle: handleToggle,\n      onUpdate: handleUpdate,\n      onDelete: handleDelete,\n    });\n\n  const updateView = () => {\n    const todos = getTodos();\n    const route = getRoute();\n\n    // hide toggle and filters, if there are no todos\n    if (todos.length <= 0) {\n      toggle.checked = false;\n      toggle.parentElement.classList.add(\"hidden\");\n\n      filters.classList.add(\"hidden\");\n      status.textContent = \"\";\n      return;\n    }\n\n    // show toggle and filters if there are todos\n    toggle.parentElement.classList.remove(\"hidden\");\n    filters.classList.remove(\"hidden\");\n\n    const activeTodos = todos.filter((todo) => !todo.completed);\n    status.textContent = `${activeTodos.length} ${activeTodos.length === 1 ? \"item\" : \"items\"} left!`;\n\n    // update todos to show (depending on filter)\n    todos.forEach((todo) => {\n      const element = document.getElementById(todo.id);\n      let shouldShow = true;\n      switch (route) {\n        case \"active\":\n          shouldShow = !todo.completed;\n          break;\n        case \"completed\":\n          shouldShow = todo.completed;\n          break;\n        default:\n          shouldShow = true;\n      }\n      element.style.display = shouldShow ? \"flex\" : \"none\";\n    });\n  };\n\n  const updateFilter = () => {\n    const name = getRoute();\n    filterButtons.forEach((button) => {\n      const filterName = button.href.split(\"/\").slice(-1)[0];\n      filterName === name ? button.classList.add(\"selected\") : button.classList.remove(\"selected\");\n    });\n\n    updateView();\n  };\n\n  // input form\n  const handleSubmit = (e) => {\n    const value = e.target.elements[\"todo-input-element\"].value;\n    e.preventDefault();\n\n    if (value === undefined || value.length < 2) return;\n\n    handleAdd(value);\n\n    e.target.reset();\n  };\n\n  // controls\n  const handleChange = (e) => {\n    const completed = e.target.checked;\n\n    getTodos().map((todo) => {\n      if (todo.completed !== completed) {\n        ref.querySelector(`#toggle-${todo.id}`).click();\n      }\n    });\n    updateView();\n  };\n\n  // filters\n  const handleClick = () => {\n    reset();\n    list.replaceChildren();\n    updateView();\n  };\n\n  // add listeners\n  form.addEventListener(\"submit\", handleSubmit);\n  toggle.addEventListener(\"change\", handleChange);\n  clear.addEventListener(\"click\", handleClick);\n\n  // render initial todos\n  const todos = getTodos();\n  todos.map((todo) => list.append(createItem(todo)));\n\n  // initialize router\n  initRouter(updateFilter);\n};\n","import { TodoApp } from \"./todo/todo-app.js\";\n\nconst data = [\n  {\n    id: \"6a3e2475-dd95-4125-9ca3-614e451169eb\",\n    task: \"Wash Car\",\n    completed: false,\n  },\n  {\n    id: \"d43d436c-0528-496d-b472-212cbba39944\",\n    task: \"Do Dishes\",\n    completed: true,\n  },\n];\n\nTodoApp({ ref: document.querySelector(\"#root\"), data });\n"]}